package com.hsicen.barimport android.graphics.Rectimport android.view.Viewimport android.view.ViewTreeObserverimport android.widget.FrameLayoutimport androidx.drawerlayout.widget.DrawerLayout/** * 软键盘相关 */interface OnKeyboardListener {  /**   * 当键盘显示状态发生变化时调用此方法   *   * @param show 是否弹出   * @param height 软键盘高度   */  fun onKeyboardChange(show: Boolean, height: Int)}/*** 适配软键盘弹出问题 */class FitsKeyboard(val mImmerseBar: ImmerseBar?) :  ViewTreeObserver.OnGlobalLayoutListener {  private val mWindow = mImmerseBar?.getWindow()  private val mDecorView = mImmerseBar?.getDecorView()  private var mContentView: View? = null  private var mChildView: View? = null  private var mPaddingLeft = 0  private var mPaddingTop = 0  private var mPaddingRight = 0  private var mPaddingBottom = 0  private var mIsAddListener = false  private var mTempKeyboardHeight = 0  init {    val fameLayout = mDecorView?.findViewById<FrameLayout>(android.R.id.content)    if (mImmerseBar?.isDialogFragment() == true) {      val supportFragment = mImmerseBar.getSupportFragment()      if (supportFragment != null) {        mChildView = supportFragment.view      } else {        val fragment = mImmerseBar.getFragment()        if (fragment != null) {          mChildView = fragment.view        }      }    } else {      mChildView = fameLayout?.getChildAt(0)      (mChildView as? DrawerLayout?)?.let {        mChildView = it.getChildAt(0)      }    }    mChildView?.let {      mPaddingLeft = it.paddingLeft      mPaddingTop = it.paddingTop      mPaddingRight = it.paddingRight      mPaddingBottom = it.paddingBottom      mContentView = it    }    mContentView = mChildView ?: fameLayout  }  fun enable(mode: Int?) {    mode ?: return    mWindow?.setSoftInputMode(mode)    if (mIsAddListener.not()) {      mDecorView?.viewTreeObserver?.addOnGlobalLayoutListener(this)      mIsAddListener = true    }  }  fun disable() {    if (mIsAddListener) {      if (mChildView != null) {        mChildView?.setPadding(          mPaddingLeft, mPaddingTop,          mPaddingRight, mPaddingBottom        )      } else {        mContentView?.setPadding(          mImmerseBar?.getPaddingLeft() ?: 0,          mImmerseBar?.getPaddingTop() ?: 0,          mImmerseBar?.getPaddingRight() ?: 0,          mImmerseBar?.getPaddingBottom() ?: 0        )      }    }  }  fun cancel() {    if (mIsAddListener) {      mDecorView?.viewTreeObserver?.removeOnGlobalLayoutListener(this)      mIsAddListener = false    }  }  fun resetKeyboardHeight() {    mTempKeyboardHeight = 0  }  override fun onGlobalLayout() {    val params = mImmerseBar?.getBarParams() ?: return    val config = mImmerseBar.getBarConfig()    if (params.keyboardEnable) {      var bottom = 0      var keyboardHeight: Int      val navigationHeight =        if (config.isNavigationAtBottom()) config.mNavigationBarHeight        else config.mNavigationBarWidth      var isPopup = false      val rect = Rect()      //获取当前窗口可视区域大小      mDecorView?.getWindowVisibleDisplayFrame(rect)      keyboardHeight = (mContentView?.height ?: 0) - rect.bottom      if (keyboardHeight != mTempKeyboardHeight) {        mTempKeyboardHeight = keyboardHeight        val content = mWindow?.decorView?.findViewById<View>(android.R.id.content)        if (ImmerseBar.checkFitsSystemWindows(content).not()) {          if (mChildView != null) {            if (params.isSupportActionBar) {              keyboardHeight += (mImmerseBar.getActionBarHeight() + config.mStatusBarHeight)            }            if (params.fits) {              keyboardHeight += config.mStatusBarHeight            }            if (keyboardHeight > navigationHeight) {              bottom = keyboardHeight + mPaddingBottom              isPopup = true            }            mContentView?.setPadding(mPaddingLeft, mPaddingTop, mPaddingRight, bottom)          } else {            bottom = mImmerseBar.getPaddingBottom()            keyboardHeight -= navigationHeight            if (keyboardHeight > navigationHeight) {              bottom = keyboardHeight + navigationHeight              isPopup = true            }            mContentView?.setPadding(              mImmerseBar.getPaddingLeft(),              mImmerseBar.getPaddingTop(),              mImmerseBar.getPaddingRight(),              bottom            )          }        } else {          keyboardHeight -= navigationHeight          if (keyboardHeight > navigationHeight) {            isPopup = true          }        }        if (keyboardHeight < 0) {          keyboardHeight = 0        }        if (params.onKeyboardListener != null) {          params.onKeyboardListener?.onKeyboardChange(isPopup, keyboardHeight)        }        if (isPopup.not() && params.barState != BarState.FLAG_SHOW_BAR) {          mImmerseBar.setBar()        }        if (isPopup.not()) {          mImmerseBar.fitsParentBarKeyboard()        }      }    }  }}